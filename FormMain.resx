<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAP0cAAAAACAAgGAAAFgAAACgAAAA/AAAAjgAAAAEACAAAAAAA+BMAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABLS0sA////ABsbGwATExMACwsLAAcHBwAfNy8ADysjAAcfFwAAFw8AKztPACMz
        RwAbKz8At7f/AKur9wCjo/MAl5frAI+P5wCHh98Ae3vbAHNz0wBra8sAY2PHAFtbvwBXV7sAT0+zAEdH
        rwA/P6cAOzujADMzmwAvL5cAKyuPACMjiwAfH4MAGxt/ABcXdwATE3MADw9rAAsLZwAHB18ABwdbAAcH
        UwAAAE8AAABHAAAAQwDf6/8A0+P/AMfb/wC70/8As8//AKfH/wCbv/8Ak7v/AIOz/wB7q/cAc6PvAGub
        5wBjk98AW4vXAFODzwBPf8sAS3u/AEdzswBDb6sAP2ujADtjmwA3X48AM1eHAC9TfwArT3cAJ0drACND
        XwAfP1MAGzdLABcvPwATKzMADyMrAO/v7wDn5+cA39/fANvb2wDT09MAy8vLAMfHxwC/v78At7e3ALOz
        swCrq6sAp6enAJ+fnwCXl5cAk5OTAIuLiwCDg4MAf39/AHd3dwBvb28Aa2trAGNjYwBbW1sAV1dXAE9P
        TwBHR0cAQ0NDADs7OwA3NzcALy8vACcnJwAjIyMAb/93AGfvbwBf32cAV89fAE+/WwBHr1MAP59LADeT
        QwAvgz8AK3M3ACNjLwAbUycAF0MfAA8zFwALIxMABxcLAI+nvwCHn7cAf5evAHePpwBvh58Aa3+bAGN7
        kwBbc4sAV2uDAE9jewBLX3cAQ1dvAD9TZwA3S18AM0NXAC8/UwBjg58AU3ePAEtrgwA/X3cAM1NnACtH
        WwAjO08AGzNDAGN/ewBXc28AT2tnAEdjWwA7V1MAM09HACtHPwAnPzcAc///AFfb6wBDu9cAL5vDAB97
        rwATW5sAB0OHAAArcwD///8A29v/ALu7/wCbm/8Ae3v/AF9f/wA/P/8AHx//AAAA/wAAAO8AAADjAAAA
        1wAAAMsAAAC/AAAAswAAAKcAAACbAAAAiwAAAH8AAABzAAAAZwAAAFsAAABPAAAAQwD/5+cA/8fHAP+r
        qwD/j48A/3NzAP9TUwD/NzcA/xsbAP8AAADjAAAAywAAALMAAACbAAAAgwAAAGsAAABTAAAA////ANvr
        /wC71/8Am8f/AHuz/wBbo/8AO4//ABt//wAXc/MAD2/rAA9n3wALX9cAB1fLAABPwwAAR7cAAEOvAP//
        /wDX//8As///AI///wBr//8AR///ACP//wAA//8AAD+nAAA3nwAAL5MAACOHACc7TwAbL0MAEyM3AAsb
        LwBTAAAARwAAADsAAAAvAAAAIwAAABcAAAALAAAAAAAAAEOf/wBL5/8A/3v/AP8A/wDPAM8AmwCfAGsA
        bwBra6cAAgICAgICAgICAgICAgICAgICAgICAgICAgICvLy8AgICvLy8AgICAgICAgICAgICAgICAgIC
        AgICAgICAgICAAICAgICAgICAgICAgICAgICAgICAgK8vLy9vry3tLwCvLS3vL69vLy8AgICAgICAgIC
        AgICAgICAgICAgICAgACAgICAgICAgICAgICAgICAgICAry6trS1ur29AgK0vLQCAr29urW0trq8AgIC
        AgICAgICAgICAgICAgICAgIAAgICAgICAgICAgICAgICAgICtrq6tAICu7S6u70Ctri2Ar27urS7AgK0
        urq2AgICAgICAgICAgICAgICAgICAAICAgICAgICZWUCAra2vLy1tru7uru6urWztQK5u7q4uru5ArWz
        tLq6u7q7u7a1vLy2tAJlZQICAgICAgICAgACAgICAgICAmViZWi6sba5s7i7Arm5u7GxsrW2t7e6uLq3
        t7a1srGxu7m5Aru4s7m2sbpoZWICAgICAgICAgIAAgICAgICAgJhXWBmubGxtrG1uLi1tLG3t7SytLaz
        srOys7a0srS3t7G0tbi4tbG2sbG5ZmBdAgICAgICAgICAAICAgICAgICY1xUZraxsba0sbOys7G3ury3
        tLKxsrKysrKxsrS3vLq3sbOys7G0trGxtmZUXAICAgICAgICAgACAgICAgICvLZlZraxsbK2t7Gvr7G3
        ury8ure0t7i1srW4t7S3ury8urexr6+xt7aysbG2ZmUCAgICAgICAgIAAgICAgICubu6trOxsbK0tK+y
        s7S2t7pmYmW4t2VeY7VjXmW3uGViZrq3trSzsq+0tLKxsbO2vLu8AgICAgICAAICAgICurq2u7q2s7O0
        tK+ytLZlX7dmYlxiarhjW165XltjuGpiXGJmt19ltrSyr7S0tLO2uru2urwCAgICAgACAgICubq1Arq5
        urq4tLKvtmVfZ7i5ZF5dYmpMZV7Pz89eZUxqYl1eZLm4Z19ltq+ytLi6urm6Ara6vAICAgIAAgICAry1
        Arq5t7u1s6+yt2VnuLkjJmJcX2ZM8c7OzczNzs7MTGZfXGImI7m4Z2W3sq+ztbu3uboCurwCAgICAAIC
        AgK6vLu5uLS7uyC5uLi4ubsjJrxjWGFq8cjOzczLzM3OzMtqYVhhKCYju7m4uLi5ILu7tLi5u7y6AgIC
        AgACAgICuLq5uLeyuiIiY2e5p7sjJikAamNqbc/IzczLysvMzc7LbWpjarwpJiO7p7m4uCIiurK3uLm6
        uAICAgIAAgICAra4tra0trW6uLe4ubm5vL8A9PPy8c/OzcjLysnKy8zNzsrLxsz0vLu7ubm4trS1uLi4
        tLa2uLYCAgICAAICAgK3tra0t7m4t7Wztbm5vL8A9PPy8c/OzczFysnIycrLzM3Ky8by8869u7i4trWv
        s7W4ube0tra3AgICAgACAgICuLq8uyAguLWzr7W3vL8A9PPy8c/OzczLyMXIxsjJysvIy87PycvOzr27
        trWyr7O1tyAgu7q6uAICAgIAAgICtLW4urm3tbOvtbm4vL2+9PPy8c/OzczLysnHxcXGyMnKyMrNzs/x
        8vPMvbm2tba2r7O1t7m6uLW0AgICAAICArS1t7i5t7Wztbi5uLy+zfTz8vHPzs3My8rJx8XFxsjJysjK
        zc7P8fLzzL25trW2tq+ztbe5uLe1tAICAgACAgK3tra0t7WyuLlmY7y9yszz8vHPz83My8rJyMbFxMXG
        yMnKyMzNzvHyzcoAvbm5Y2a5trK1t7S2trcCAgIAAgICtrW0ubeyuF9pY1xlzczKz/Py8c/OzczLysnI
        xsXGyMnKy8jNzs/x8srPzAC9ZVxjaV+4sre5tLW2AgICAAICtLW3ubi1sWJaZWFUZwAA8MwA8/Lxz87N
        zMvKycjFyMnKy8jKzs/x8s3PAM0AvmdUYWVaYrG1uLm3tbQCAgACAra3uLi1srO1ZadlZ8wAAPAAzc3z
        8vHPzs3My8rFyMnKy8rKzs/x8vPNzwAAzQC+YWWnZbWzsrW4uLe2AgIAAgK2uLS1s7Wztbi7v77MzgAA
        8ADPzc/y8c/OzczKysnKy8zKzs/x8vPwAM4AAM4AAL6+uLq1s7Wztbi4tgICAALfubi0tLW0sbW4u78A
        AM4AAPAAAM/N8/Lxz87KzMvKy8zNzsrx8vP08PTMAADwAPAAvrq4tbOxs7S2uLnfAgAC37m4tK+1sa+1
        uLu/AADOAADwAADPzfPy8c/OyszLysvMzc7K8fLz9PD0zAAA8ADwAL66urizsbOxt7i53wIAArW3t7Sy
        t7K1t7q/AAAAzc8A8AAAAMvO8/Lxz8rNzMvMzc7P8crz9PTwzsvPAPAA8AC+vL66uLW1sre3t7UCAAK1
        t7e0sra2tri6vwAAAM3PAPAAAADLzvPy8c/KzczLzM3Oz/HK8/T08M7LzwDwAPAAvry+urm4trK4t7e1
        AgACt7a0t7W4uGRku78AAAAAzgDwAAAAzMvO8/Lxz8rNzc3Oz/HyyvT0AM7LzM3wAPAA8C6+vmRkuba1
        uLS2twIAuLe1sri1uLhkXbu/8AAAAM3PAAAAAM3Kzc7z8vHKaWJpbfHyyvT0AADLzM7NAPAAAPAuLb5d
        ZLm4tbqytbe4ALi5ube6tri2ZlUpAPDNzQDNzvDwAADOzGtnawBpZ2ZbZmdpAGtna8/PzM4Azs8AAM4A
        AC6+VWa5uLe6t7m5uAC3tre5urm6vExluwAAAPDNzc0AAPDwzs1nYmkAZFxoYmhcZABpYmfOAM7Nzc3N
        AM7PAAAAp2VMvLq5urm3trcAtrS1t7m8vLy9vSgAAADwAADOb2ls8M7NZFxmIiMhHBgcISMiZlxkzgDN
        bGlvzgDPzvDwACi9vby8vLm3tbS2ALWytLW3u769vSinvAAA8ABubG1lZ0zwTGZmICMlJSEhISUlIyBm
        ZkzOTGdlbWxuAM4AzrynKL29vru3tbSytQACsrC0trm9vbwkIae8APEAbGdnYGMkJiQlIyQkIiEfIR8h
        IiQkIyUkJiRjYGdnbADxALynISS8vb25trSwsgIAArWytbi7vLy8JiGnbGrx8WdjaFtjJCElJSIfHxwe
        IR4hHhwfHyIlJSEkY1toY2fx8WpspyEmvLy8u7i1srUCAAICubq9vby6vLy6bGpnaG1fYCRjKCYlIx8Z
        FxwbHCIbIhwbHBcZHyMlISBjJGBfbWhnamy6vLm6vL29urkCAgACArq9vbu7ube7umplYmchW2YlJR0b
        GxsXGhUZFRoiGiIaFRkVGhcbHhsbHSVmWyFnYmVqvLu3ubu7vb26AgIAAgKnvLu6ubazubxlIigkIh4f
        HBcYGB0fHRwaGBcVHiAeFRcYGhwdHx0YGBccHx4iJCUiZbu5s7a5uru8pwICAAICuLq4tri0sbi9pygn
        ICAcHh8ZFRUWGBkaGBUUGaUipRkUFRgaGRgWFRUZHx4cICUnJae8uLG0uLa4urgCAgACAgK2tbK3urq3
        vSghIx4bFxseHRsWFBQVGBkcHKWko6SlHBwZGBUUFBYbHR4bFxseICElvLe6ureytbYCAgIAAgICtLa5
        vb28JCEfHRcaGxcYGx4gHBsYGx+lpKOioaKhoqOkpR8bGBscIB4bGBcbGhcdHyEkvL29uba0AgICAAIC
        AgK4u7y8vCYhHSEdGhccHiAiJR8eHCGmpKOioKKjoqCio6SmIRweHyUiIB4cFxodIR0hJry8vbu4tQIC
        AgACAgICAr28urm8JiMdIR4cGxsiJSMiHyElpqSjoaChoqGgoaOkpiUhHyIjJSIbGxweIR0jJry5ur29
        vQICAgIAAgICAgK7u7m3u7m5JB8fHB4iJSMcGRwkKSKlpKOioqKioqOkpSIpJBwZHCMlIh4cHx8kubm7
        t7m7uwICAgICAAICAgICurm2s7m2trckIR8fJSMlJSUlJbsip6ampaWlpaWmpqciuyUlJSUkIyUfHyEk
        t7a2ubO2uboCAgICAgACAgICAra4tLG4tbOxtiQjISMeIhweJSe4tq+vs7OmpaazsrKztrgnJSAcIh4j
        ISMktrGztbixtLi2AgICAgIAAgICAgKyt7q6t7azsLO3IygnIyMiJSW4trS1tbazs7mztLa2tLO2uCgl
        IiIjJygjt7Ows7a3urq3sgICAgICAAICAgICAre2uLW1uLe4uiMkKCcmubm4trGvr7O2trW5tba0r6+x
        s7a4JygmJygkI7q4t7i1tbi2twICAgICAgACAgICAgICsbS4uri2tbO4I7m6ubi2trKvsLKys7a3ube2
        sbGwr7GztrgnKCi5I7iztba4uri0sQICAgICAgIAAgICAgICAgK1t7a0sra0t7q5uLa2trW0srKxsrS3
        ubu4trSxsa+xsbW2ubsnubq3tLaytLa3tQICAgICAgICAAICAgICAgICa2hnZbGzuLq4uLm5ubi1tLKx
        sbS1t7q7ure2tLGxsrS1uLm5ubi4urizsWVnaGsCAgICAgICAgACAgICAgICaGdlYWJlsbq4t7S1tLa3
        t7a1tLe3t7q7vLu6t7e0sbG2t7e2tLW0t7i6sWViYWVnaAICAgICAgIAAgICAgICAmVlYV5gZbW3trRp
        aGe2tba3uLe0s7S4uru6uLSzt7S0t7a1tmdoabS2t7VlYF5hZWUCAgICAgICAAICAgICAmVlYVxhZbO2
        uGlnZWNlY7aztbe0srS1trm4uba1tLK3t7WztmNlY2Vnabi2s2VhXGFlZQICAgICAgACAgICAgJlY1xj
        AgICuGllY2RkY2BftbK1trS1tbi3sbe4tbW0trWytV9gY2RkY2VpuAICAmNcY2UCAgICAgIAAgICAgJl
        Y1wCAgICAmlmZGRjYl1bWbawtbe4ube0sbaxtLe5uLe1sLZZW11iY2RkZmkCAgICAlxjZQICAgICAAIC
        AgICY1wCAgICAmlpZ2VkYVpXUle3sbW3ubm3tLa2trS3ubi3tbG3V1JXWmFkZWdpaQICAgICXGMCAgIC
        AgACAgICAgICAgICAmlpaGZkYVxbU1e4tbK1ubm4s7a1s7W2s7i5ubmytbhXU1tcYWRmaGlpAgICAgIC
        AgICAgIAAgICAgICAgICAgJpaGdkYV5cXGFmAgICAri4t7O0s7CztLO3uLgCAgJmZmFcXF5hZGdoaQIC
        AgICAgICAgICAAICAgICAgICAgICaWdkYV9eXmZmAgICAgICAgICAgICAgICAgICAgICAmZmZl5eX2Fk
        Z2kCAgICAgICAgICAgACAgICAgICAgICaWhkYV9eYQJiXwICAgICAgICAgICAgICAgICAgICAgICX2IC
        YV5fYWRoaQICAgICAgICAgIAAgICAgICAgICAmdlYmBfAgICAmICAgICAgICAgICAgICAgICAgICAgIC
        AmICAgICX2BiZWcCAgICAgICAgICAAICAgICAgICAgJmZWBfAgICAgICAgICAgICAgICAgICAgICAgIC
        AgICAgICAgICAgJfYGVmAgICAgICAgICAgACAgICAgICAgICZmNgXwICAgICAgICAgICAgICAgICAgIC
        AgICAgICAgICAgICAgICX2BjZgICAgICAgICAgIAAgICAgICAgICAmZiYAICAgICAgICAgICAgICAgIC
        AgICAgICAgICAgICAgICAgICAgJgYmYCAgICAgICAgICAAICAgICAgICAgJlYgICAgICAgICAgICAgIC
        AgICAgICAgICAgICAgICAgICAgICAgICAmJlAgICAgICAgICAgACAgICAgICAgICZWICAgICAgICAgIC
        AgICAgICAgICAgICAgICAgICAgICAgICAgICAgJiZQICAgICAgICAgInAgICAgICAgICAmViAgICAgIC
        AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICYmUCAgICAgICAgICAQICAgICAgICAgJjYwIC
        AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAmNjAgICAgICAgICAgD////jj////v//
        /AEAf//+///wDGAf//7//8MEQYf//v8wABAQABP+/wAQAAAQA/7/AAAAAAAD/v8AAAAAAAP+/gAAAAAA
        A/78AAAAAAAAfvgAAAAAAAA+8QAAAAAAAR7yAAAAAAAAnvAAAAAAAAAe8AAAAAAAAB7wAAAAAAAAHvAA
        AAAAAAAe8AAAAAAAAB7gAAAAAAAADuAAAAAAAAAO4AAAAAAAAA7gAAAAAAAADsAAAAAAAAAGwAAAAAAA
        AAbAAAAAAAAABoAAAAAAAAACgAAAAAAAAAKAAAAAAAAAAoAAAAAAAAACgAAAAAAAAAIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAKAAAAAAAAAAsAAAAAAAAAGwAAAAAAA
        AAbAAAAAAAAABsAAAAAAAAAG4AAAAAAAAA7gAAAAAAAADvAAAAAAAAAO+AAAAAAAAB74AAAAAAAAPvgA
        AAAAAAA++AAAAAAAAD74AAAAAAAAPvwAAAAAAAB+/gAAAAAAAP7/AAAAAAAB/v8AAAAAAAH+/gAAAAAA
        AP7+AAAAAAAA/vwAAAAAAAB+/DgAAAAAOH74+AAAAAA+PvnwAAAAAB8+/+AAAAAAD/7/4AeAA4AP/v/g
        D///wA/+/8BP///kB/7/we///+8H/v/D/////4f+/8P/////h/7/x//////H/v/P/////+f+/8//////
        5/7/z//////n/v/P/////+f+
</value>
  </data>
</root>